############################################################
# Dockerfile to build CentOS,Nginx installed  Container
# Based on CentOS
#For suzhou project 
############################################################

# Base image
FROM conda/miniconda3-centos7

# File Author / Maintainer

# Arguments with default value
#ENV UI_CODE_VERSION=master
# Update library
#RUN yum -y update


# 基础环境配置

    # 修改系统时区为东八区
RUN rm -rf /etc/localtime \
    && ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \
    && yum install -y vim  wget curl git \
    && yum install -y net-tools gcc-c++.x86_64

#增加node的基础包
RUN curl -sL https://rpm.nodesource.com/setup_12.x | bash -
#安装nodejs
RUN yum install -y nodejs

# nginx
ADD docker/nginx.repo /etc/yum.repos.d/nginx.repo
RUN yum -y install nginx

# 设置pip source
RUN pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple

# 更新pip版本
RUN pip install --upgrade pip

# Installing supervisor
#RUN yum install -y python-setuptools
#RUN easy_install pip
RUN pip install supervisor

#To build uWSGI you need Python and a C compiler (gcc and clang are supported
#https://uwsgi-docs.readthedocs.io/en/latest/Install.html
RUN yum install -y gcc
# install uwsgi now because it takes a little while
RUN yum install -y python-devel
RUN pip install uwsgi
#solve uwsgi startederror while loading shared libraries: libssl.so.1.1: cannot open shared object file
RUN ln -s /usr/local/lib/libcrypto.so.1.1 /lib64/libcrypto.so.1.1
RUN ln -s /usr/local/lib/libssl.so.1.1 /lib64/libssl.so.1.1
 
#note on Python 3 : if you are using python3 then you need to install python3-dev using the following command :
# for pip install mysqlclient
RUN yum install -y python3-devel 
RUN yum install -y mysql-devel



# COPY requirements.txt and RUN pip install BEFORE adding the rest of your code, this will cause Docker's caching mechanism
# to prevent re-installing (all your) dependencies when you made a change a line or two in your app.

#  too low ,so install separately
#RUN pip3 install mysqlclient==1.4.4 -i  https://pypi.tuna.tsinghua.edu.cn/simple
#RUN pip3 install flask-mongoengine==0.9.5 -i  https://pypi.tuna.tsinghua.edu.cn/simple

WORKDIR  /home/docker/code
#COPY pipsource/* pipsource/
COPY ./requirements.txt /home/docker/code/
RUN pip3 install -r /home/docker/code/requirements.txt -i  https://pypi.tuna.tsinghua.edu.cn/simple

COPY docker/package.json /home/docker/code/
#COPY package.json ./
RUN npm install --silent --no-cache --registry=https://registry.npm.taobao.org
# 报异常，单独装
RUN npm install --save react-json-tree

#RUN pip3 install pipsource/*


